<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAFVV/wMfKukYGyfnQRwl5nwcH+XABQc0zgAAAAQAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAB/f/8CHCrwEh0n5jQbJeZnGSXlnRkl5c4ZJOTuGSPl/Q0Qd/8AAAD/AQIJfQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA////ATMzzA8qNcQwJy/KYR8o2pgbJOLLGyTj7Rsk4v0ZJOT/GSTk/xkk5P8VHcH/AAEH/wAA
        AP8AAAD4AAAAKAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP//
        /wEqKukMHSnhKyIt5VoaJN+SGyTgxhol3+oaJN/9GyTi/xsk4v8bJOL/GyTi/xkk5P8ZJOT/GCPg/wUH
        Mv8AAAD/AAAA/wAAAP8AAADHAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMzPMCi00
        xCcqMMhUHSvYjBkm38AZJuDnGSbf/Bkm3/8ZJt//GSXg/xkl4P8ZJeD/GSXg/xkl4v8ZJeL/GSXi/xkl
        4v8OFH//AAAA/wAAAP8AAAD/AAAA/wAAAP8AAABsAAAAAAAAAAAAAAAAAAAAAB8//wgdJOkjHSfkThwk
        4oYbJOK7Gybg5Bkl4PoXJuD/Fybg/xcm4P8XJuD/Fybg/xcm4P8XJuD/Fybg/xkl4P8ZJeL/GSXi/xkl
        4v8ZJeL/FSDF/wEBCv8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAPMAAAAgAAAAAAAAAAAdI+V5HSPktR0j
        5OAdI+T4HSPk/x0j5P8dI+T/GyTi/xkl4v8XJeL/FyXi/xcl4v8XJeL/FyXi/xcl4v8XJeL/GSXi/xkk
        5P8ZJOT/GSTk/xkk5P8GCTn/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAL8AAAAAAAAAAB0j
        5sQdIuX/HSLl/x0i5f8dIuX/HSLl/x0j5P8bI+T/GSTk/xkk5P8ZJeL/GSXi/xkl4v8ZJeL/GSXi/xkl
        4v8ZJOT/GSTk/xkk5P8ZJOT/DxWK/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AGAAAAAAHCTkhRsj5P4bI+T/GyPk/xsj5P8bI+T/GyPk/xsj5P8bI+T/GyPk/xsj5P8bI+T/GyPk/xsj
        5P8bI+T/GSTk/xkk5P8ZJOT/GSTk/xYgyv8BAg7/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA7wAAABwcI+ZIGyPk8Rsj5P8bI+T/GyPk/xsj5P8bI+T/GyPk/xsj5P8bI+T/GyPk/xsj
        5P8bI+T/GyPk/xsj5P8bI+T/GSTk/xkk5P8ZJOT/BwpD/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAAsxsk7BwbI+TTGyPk/xsj5P8bI+T/GyPk/xsj5P8bI+T/GyPk/xsj
        5P8bI+T/GyPk/xsj5P8bI+T/GyPk/xsj5P8ZJOT/GSTk/xAXlf8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/Pz//BBsj5KQbI+T/GyPk/xsj5P8bI+T/GyPk/xsj
        5P8bI+T/GyPk/xsj5P8bI+T/GyPk/xsj5P8bI+T/GyPk/xkk5P8ZJOT/DhSD/wwRcf8MEXH/CQ1V/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAACfAAAAgAAAAIAAAAAAHCPibRoi4v8aIuL/GiLi/xoi
        4v8cIuL/HCLi/xoi4v8aIuL/GiLi/xoi4v8aIuL/GiLi/xoi4v8aIuL/GSTk+Rkk5ewZJOT9GSTk/xkk
        5P8SGqr/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAEAAAAAAAAAAAAAAAAAaI+Q6GiLi8Boi
        4v8aIuL/GiLi/xwi4v8cIuL/GiLi/xoi4v8aIuL/GiLi/xoi4v0aIuLmGiLivhoj44kZJuVPGSTlRhkl
        5OMZJOT/GSTk/xIaqv8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/BwkjTQAAAAAAAAAAAAAAACQk
        5hUaIuLQGiLi/xoi4v8aIuL/HCLi/xwi4v8aIuL/GiLi/xoi4v8aIuL/GiPi6Rol5EQcOOIJAAAAAAAA
        AAAZM+UKGiXkuRkk5P8ZJOT/Ehqq/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8MEk9nAAAAAAAA
        AAAAAAAAf3//Ahwj36AaI+H/GCPh/xgj4f8aIuL/HCHk/xoi4v8aIuL/GiLi/xoi4v8aIuL3GyLjSgAA
        AAAAAAAAAAAAAAAAAAAZJOWEGSTk/xkk5P8SGqr/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/xAY
        c4wAAAAAAAAAAAAAAAAAAAAAJSfcZxsl4P4VKN3/FSff/xsj5P8dIef/GyPk/xsk4v8bJOL/GyTi/xsk
        4v8bJeOBAAAAAAAAAAAAAAAAAAAAAB4k5EwbJOL3GyTi/xQaqf8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/ERiNtn9//wIAAAAAAAAAAAAAAAAqKtQ2Gyfd7hUp2v8VKN3/GyPk/x0i5f8bI+T/GyTi/xsk
        4v8bJOL/GyTi/xsk47ccOOIJAAAAAAAAAAAzM/8FHCXiPhsk4ukbJOL/FBqp/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8QGp7aGSblFAAAAAAAAAAAAAAAACo41BIbKN3LFSnc/xUo3f8bJOL/HSPk/xsk
        4v8bJOL/GyTi/xsk4v8bJOL/GyTi4Rwl4j4eJeREHCXifBsl4rMbJOLfGyTi/Bsk4v8UGqn/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/xIZpfQaI+Q5AAAAAAAAAAAAAAAA////ARwn3JoVKN3/FSff/xsl
        4P8dJOL/GyTi/xsk4v8bJOL/GyTi/xsk4v8bJOL8GyTi5hsk4vUbJOL/GyTi/xsk4v8bJOL/GyTi/xQa
        qf8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/Ehmn/yEq52sAAAAAAAAAAAAAAAAAAAAAHCraYRUn
        3/0VJuD/Gybf/x0l4P8bJOL/GyTi/xsk4v8bJOL/GyTi/xsk4v8bJOL/GyTi/xsk4v8bJOL/GyTi/xsk
        4v8bJOL/FBqp/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8SGaf/GiPho1VV/wMAAAAAAAAAAAAA
        AAAfKdoxFSff6xUl4v8bJt//HyXf/x0l4P8bJOL/GyTi/xsk4v8bJOL/GyTi/xsk4v8bJOL/GyTi/xsk
        4v8bJOL/GyTi/xsk4v8UGqn/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/xMaqP8aI+HRHCXiGwAA
        AAAAAAAAAAAAAB8v3xAVJuDGFSXk/xsl4P8fJd//HSXg/xsk4v8bJOL/GyTi/xsk4v8bJOL/GyTi/xsk
        4v8bJOL/GyTi/xsk4v8bJOL/GyTi/xQaqf8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/Exqo/xoj
        4fAcI+JHAAAAAAAAAAAAAAAAAAAAABsm35MZJOT/HSTi/x0l4P8bJOL/GyTi/xsk4v8bJOL/GyTi/xsk
        4v8bJOL/GyTi/xsk4v8bI+T/GyPl/xsj5f8bI+T/GyPk/xsl4P8ZJeD/GSXg/xkl4v8ZJeL/GSXi/xgj
        4f8YI+H/GCPh/hkj4YEAAAAAAAAAAAAAAAAAAAAALCTdWyQh5fwfI+T/HSPk/xsk4v8bJOL/GyTi/xsk
        4v8ZJeL/GSXi/xkl4v8ZJeL/GSTk/xkj5f8ZIer/GSHq/xgg5/8YIuT/GCXe/xYn2/8WJd7/FiXf/xYl
        3/8WJd//Fybg/xQi3f8TIdz/EiDbxAAAAAAAAAAAAAAAAAAAAAA0KNwsKyDl5yEh5f8dIuX/GyPk/xsk
        4v8bJOL/GyTi/xkl4v8ZJeL/GSXi/xkl4v8ZJeD/GSTk/xkh6P8ZIer/FiDp/xYi5P8WJd7/Fifb/xYl
        3v8WJd//FiXf/xYl3/8dLOb7Gynk5xkn48AWJuCGAAAAAAAAAAAAAAAAAAAAADo61w0qIeTBISHn/x0h
        5/8bI+T/GyTi/xsk4v8bJOL/GyTi/xsk4v8bJOL/GyXg/xkn3f8ZJ93/GSXi/xkj5f8YIuT/GCLk/xgk
        3/8YJd7/GiXe/Bwl3uocJN7FHSTfkicw6FodKeErFSrUDP///wEAAAAAAAAAAAAAAAAAAAAAAAAAACsi
        44whIeX/HSLl/xsj5P8bJOL/GyTi/xsk4v8bJOL/GyTi/xsk4v8bJeD/Gyfd/xsn3f8bJt//GyXg/xoj
        4f0aI+HtGiTfyh4o2JgnL8dgKjW/MDMzzA////8BAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAALCbeViEj4vsdI+T/GyTi/xsk4v8bJOL/GyTi/xsk4v8bJOL/GyTi/xsk4v8bI+T+HSPk8B0k
        4tAdI+CeHSXeZx0n4TQeLeERf3//AgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAtJ94nISbf5B0k4v8bJOL/GyTi/xsk4v8bJOL/GyTi/hsk4vIbJOLUHybepCoq
        120sLM05MDDOFVVV/wMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAC4u5wsiJt67HSXg/xsk4v4bJOLzGyTi1xsk4qkcJeJzHCXiPh8q
        6RhVVf8DAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACEl3YIeJeHMGyTjih0k5E0gKeYfMzP/BQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA///wH///AB//8AAP/wAAB/gAAAeAAAADAAAAAwAAAAEAAAAAAAAAAAAA
        AAAAAAAAgAAAA4AAAAOAAYADgAPAA8ADwAHAAYABwAAAAcAAAAHgAAAA4AAAAOAAAADwAAAA8AAAAPAA
        AADwAAAA+AAAD/gAAP/4AA//+AD///wP//8=
</value>
  </data>
</root>